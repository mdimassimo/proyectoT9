1709333478
waR3U4bTeM%3A46ce99211b2713446620d44987e57ad3-9fa7f41ade018811271f7f202ee9d331
s:6020:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjlmYTdmNDFhZGUwMTg4MTEyNzFmN2YyMDJlZTlkMzMxIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTQ6InBlcnNvblBhZ2UucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTQ6InBlcnNvblBhZ2UucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozNjE3OiI8IURPQ1RZUEUgaHRtbD4NCjxodG1sIGxhbmc9ImVuIj4NCjxoZWFkPg0KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04Ij4NCiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UiPg0KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4NCiAgICA8dGl0bGU+VGFyZWEgOSBEV0VTPC90aXRsZT4NCiAgICA8bGluayByZWw9InByZWNvbm5lY3QiIGhyZWY9Imh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20iPg0KICAgIDxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbSIgY3Jvc3NvcmlnaW4+DQogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1QYWNpZmljbyZkaXNwbGF5PXN3YXAiIHJlbD0ic3R5bGVzaGVldCI+DQogICAgPHN0eWxlPg0KICAgICAgICAqIHsNCiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7DQogICAgICAgICAgICBwYWRkaW5nOiAwOw0KICAgICAgICAgICAgbWFyZ2luOiAwOw0KICAgICAgICB9DQoNCiAgICAgICAgQGZvbnQtZmFjZSB7DQogICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdTdGFyIEplZGknOw0KICAgICAgICAgICAgICAgIHNyYzogdXJsKCcuL0Fzc2V0cy9mb250cy9TdGFySmVkaS1ER1JXLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTsNCiAgICAgICAgICAgIH0gICAgICANCiAgICAgICAgICAgIA0KICAgICAgICBoZWFkZXIgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzFDMUUyMjsNCiAgICAgICAgICAgIC13ZWJraXQtYm94LXNoYWRvdzogLTJweCAxMHB4IDlweCAtNHB4ICMxOTE3MDA7IA0KICAgICAgICAgICAgYm94LXNoYWRvdzogLTJweCAxMHB4IDlweCAtNHB4ICMxOTE3MDA7DQogICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgIGhlaWdodDogMjMwcHg7DQogICAgICAgICAgICBwYWRkaW5nOiAzJTsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgfQ0KDQogICAgICAgIGgxIHsNCiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnUGFjaWZpY28nLCBjdXJzaXZlOw0KICAgICAgICAgICAgcm90YXRlOiAtNmRlZzsNCiAgICAgICAgfQ0KDQogICAgICAgIGgyew0KICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdTdGFyIEplZGknOw0KICAgICAgICAgICAgY29sb3I6ICNGRkVCMDA7DQogICAgICAgIH0NCg0KICAgICAgICBwIHsNCiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOw0KICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OyAgICAgICAgICAgIA0KICAgICAgICB9DQoNCiAgICAgICAgYm9keSB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjcyQjMwOw0KICAgICAgICB9DQoNCiAgICAgICAgc2VjdGlvbnsNCiAgICAgICAgICAgIG1hcmdpbjogMiU7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgIH0NCg0KICAgICAgICBzZWN0aW9uIGltZ3sNCiAgICAgICAgICAgIGJvcmRlcjogM3B4IHNvbGlkICNGRkVCMDA7DQogICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7DQogICAgICAgIH0NCg0KICAgICAgICBoM3sNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7DQogICAgICAgICAgICBjb2xvcjogd2hpdGU7DQogICAgICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsNCiAgICAgICAgfQ0KDQogICAgICAgIC5iYWNrX2hvbWV7DQogICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5saW5rX2NvbnRhaW5lcnsNCiAgICAgICAgICAgIHdpZHRoOiAyMDBweDsNCiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIA0KICAgIDwvc3R5bGU+DQo8L2hlYWQ+DQo8Ym9keT4NCiAgICA8aGVhZGVyPg0KICAgICAgICA8aW1nIHNyYz0iLi9Bc3NldHMvaW1hZ2VzL3BuZ2ZpbmQuY29tLXN0YXItd2Fycy1sb2dvLXBuZy0zMDEzNjM5LnBuZyIgd2lkdGg9IjIzMHB4Ii8+DQogICAgICAgIDxoMT5Mb3MgcGVyc29uYWplczwvaDE+DQogICAgPC9oZWFkZXI+DQogICAgPHNlY3Rpb24+DQogICAgICAgIDxkaXYgY2xhc3M9ImxpbmtfY29udGFpbmVyIj4NCiAgICAgICAgPGEgY2xhc3M9ImJhY2tfaG9tZSIgaHJlZj0iaHR0cHM6Ly9tZGltYXNzaW1vLmNvbS90YXJlYXNEV0VTL3RhcmVhOS9pbmRleC5waHA/b3JkZXJlZD1saXN0YWRvUGVyc29uYWplcyI+DQogICAgICAgICAgICA8aDM+IOKshe+4j1ZvbHZlciBhbCBpbmljaW8gPC9oMz4NCiAgICAgICAgPC9hPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPD9waHANCiAgICAgICAgZWNobyAiPGltZyBzcmM9Jy4vQXNzZXRzL2ltYWdlcy8iIC4gJF9HRVRbImlkIl0gLiAiLmpwZycgaGVpZ2h0PSczMDBweCc+IjsNCiAgICAgICAgPz4NCiAgICAgICAgPD9waHANCiAgICAgICAgJHBhdGhCYXNlQVBJID0gImh0dHBzOi8vbWRpbWFzc2ltby5jb20vdGFyZWFzRFdFUy90YXJlYTkvQVBJLnBocCI7DQogICAgICAgICAgICBpZiAoaXNzZXQoJF9HRVRbIm9yZGVyZWQiXSkgJiYgaXNzZXQoJF9HRVRbImlkIl0pICYmICRfR0VUWyJvcmRlcmVkIl0gPT0gIm9idGVuZXJQZXJzb25hamVzIil7DQogICAgICAgICAgICAgICAgICAgIC8vU2Ugb2J0aWVuZSB0b2RvIGVsIGNvbnRlbmlkbyBlbiBicnV0byBkZSBsYSBjb25zdWx0YSBhIGxhIEFQSQ0KICAgICAgICAgICAgICAgICAgICAkYXBwX2luZm8gPSBmaWxlX2dldF9jb250ZW50cygkcGF0aEJhc2VBUEkgLiAnP29yZGVyZWQ9b2J0ZW5lclBlcnNvbmFqZXMmaWQ9JyAuICRfR0VUWyJpZCJdKTsNCiAgICAgICAgICAgICAgICAgICAgLy9TZSBkZWNvZGlmaWNhIGVsIGZpY2hlcm8gSlNPTiB5IHNlIGNvbnZpZXJ0ZSBhIGFycmF5DQogICAgICAgICAgICAgICAgICAgICRhcHBfaW5mbyA9IGpzb25fZGVjb2RlKCRhcHBfaW5mbywgdHJ1ZSk7DQogICAgICAgICAgICAgICAgICAgIC8vU2UgYWNjZWRlIGEgbGEgaW5mb3JtYWNpw7NuIGNvcnJlc3BvbmRpZW50ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPGgyPiIgLiAkYXBwX2luZm9bIm5hbWUiXS4gIjwvaDI+PGJyPiI7DQogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICI8cD5DdW1wbGVhw7FvczogIiAuICRhcHBfaW5mb1siYmlydGhfeWVhciJdLiAiPC9wPjxicj4iOw0KICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPHA+QWx0dXJhIChjbSk6ICIgLiAkYXBwX2luZm9bImhlaWdodCJdLiAiPC9wPjxicj4iOyAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPHA+UGVzbyAoa2cpOiAiIC4gJGFwcF9pbmZvWyJtYXNzIl0uICI8L3A+PGJyPiI7ICANCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICA/Pg0KICAgIDwvc2VjdGlvbj4NCg0KPC9ib2R5Pg0KPC9odG1sPiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";